==============================================================================
 WarpX Job Information
==============================================================================
number of MPI processes: 1


==============================================================================
 Build Information
==============================================================================
build date:    Apr 21 2023 12:47:12
build machine: Linux rodan 6.1.0-5-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.12-1 (2023-02-15) x86_64
build dir:     /opt/warpx/build
AMReX dir:     /opt/warpx/build/_deps/fetchedamrex-src

COMP:          GNU
COMP version:  12.2.0

C++ compiler:  /usr/bin/c++
C++ flags:     -I/opt/warpx/WarpX/Source -I/opt/warpx/build/Source -O3 -DNDEBUG

Fortran comp:  
Fortran flags: 

Link flags:    
Libraries:     

WarpX  git describe: 23.04-45-gdabd0ad42839-dirty
AMReX  git describe: 23.04-26-gc1e8e73b63dc


==============================================================================
 Grid Information
==============================================================================
 level: 0
   number of boxes = 1
   maximum zones   = 256 256 256 

 Boundary conditions
   -x: interior
   +x: interior
   -y: interior
   +y: interior
   -z: interior
   +z: interior


==============================================================================
 Inputs File Parameters
==============================================================================
stop_time = 3.3356409519815207e-12
amr.max_grid_size = 256
amr.blocking_factor = 32
amr.max_level = 0
geometry.dims = 3
geometry.prob_lo = -0.00039999999999999996 -0.00039999999999999996 0.0
geometry.prob_hi = 0.00039999999999999996 0.00039999999999999996 0.0007999999999999999
boundary.field_lo = pml pml pml
boundary.field_hi = pml pml pml
algo.maxwell_solver = ckc
algo.em_solver_medium = macroscopic
macroscopic.sigma = 0.0
macroscopic.mu = mu0
macroscopic.epsilon_function(x,y,z) = 
  if(sqrt(x**2+y**2)<100e-6, epsilon0, 3.8*epsilon0)
warpx.verbose = 1
warpx.do_dive_cleaning = 0
warpx.use_filter = 1
warpx.cfl = .99
warpx.do_moving_window = 1
warpx.moving_window_dir = z
warpx.moving_window_v = 0.99999999875
algo.particle_shape = 3
particles.species_names = driver
particles.use_fdtd_nci_corr = 1
particles.rigid_injected_species = driver
driver.charge = -q_e
driver.mass = 1e10
driver.injection_style = gaussian_beam
driver.x_rms = 9.999999999999999e-06
driver.y_rms = 9.999999999999999e-06
driver.z_rms = 9.999999999999999e-06
driver.x_m = 0.0
driver.y_m = 0.0
driver.z_m = 0.0007
driver.npart = 1000000
driver.q_tot = -1e-12
driver.momentum_distribution_type = gaussian
driver.ux_m = 0.0
driver.uy_m = 0.0
driver.uz_m = 19999.999975
driver.ux_th = 1.0
driver.uy_th = 1.0
driver.uz_th = 1.0
driver.zinject_plane = 0.0
driver.rigid_advance = true
diagnostics.diags_names = yz xyz
yz.intervals = 10000
yz.diag_type = Full
yz.file_prefix = diags/yz/plt
yz.fields_to_plot = Ey Ez
yz.diag_lo = 0.0 -0.00039999999999999996 0.0
yz.diag_hi = 0.0 0.00039999999999999996 0.0007999999999999999
xyz.intervals = 10000
xyz.diag_type = Full
xyz.file_prefix = diags/xyz/plt
xyz.fields_to_plot = rho_driver
xyz.diag_lo = -0.00039999999999999996 -0.00039999999999999996 0.0
xyz.diag_hi = 0.00039999999999999996 0.00039999999999999996 0.0007999999999999999
warpx.reduced_diags_names = beamdump foodump
beamdump.type = BeamRelevant
beamdump.species = driver
beamdump.intervals = 1
foodump.type = ParticleNumber
foodump.intervals = 1
amrex.abort_on_out_of_gpu_memory = 1
amrex.the_arena_is_managed = 0
particles.do_tiling = 0
amrex.v = 1
amrex.verbose = 1
amrex.max_gpu_streams = 4
device.v = 0
device.verbose = 0
device.numThreads.x = 0
device.numThreads.y = 0
device.numThreads.z = 0
device.numBlocks.x = 0
device.numBlocks.y = 0
device.numBlocks.z = 0
device.graph_init = 0
device.graph_init_nodes = 10000
amrex.regtest_reduction = 0
amrex.signal_handling = 1
amrex.throw_exception = 0
amrex.call_addr2line = 1
amrex.abort_on_unused_inputs = 0
amrex.handle_sigsegv = 1
amrex.handle_sigterm = 0
amrex.handle_sigint = 1
amrex.handle_sigabrt = 1
amrex.handle_sigfpe = 1
amrex.fpe_trap_invalid = 0
amrex.fpe_trap_zero = 0
amrex.fpe_trap_overflow = 0
amrex.use_gpu_aware_mpi = 0
amrex.the_arena_init_size = 63742181376
amrex.the_device_arena_init_size = 8388608
amrex.the_managed_arena_init_size = 8388608
amrex.the_pinned_arena_init_size = 8388608
amrex.the_arena_release_threshold = 9223372036854775807
amrex.the_device_arena_release_threshold = 9223372036854775807
amrex.the_managed_arena_release_threshold = 9223372036854775807
amrex.the_pinned_arena_release_threshold = 84989575168
amrex.the_async_arena_release_threshold = 9223372036854775807
fab.init_snan = 0
DistributionMapping.v = 0
DistributionMapping.verbose = 0
DistributionMapping.efficiency = 0.89999997615814209
DistributionMapping.sfc_threshold = 0
DistributionMapping.node_size = 0
DistributionMapping.verbose_mapper = 0
fab.initval = nan
fab.do_initval = 0
fabarray.maxcomp = 25
vismf.v = 0
vismf.headerversion = 1
vismf.groupsets = 0
vismf.setbuf = 1
vismf.usesingleread = 0
vismf.usesinglewrite = 0
vismf.checkfilepositions = 0
vismf.usepersistentifstreams = 0
vismf.usesynchronousreads = 0
vismf.usedynamicsetselection = 1
vismf.iobuffersize = 2097152
vismf.allowsparsewrites = 1
amrex.async_out = 0
amrex.async_out_nfiles = 64
machine.verbose = 0
machine.very_verbose = 0
tiny_profiler.device_synchronize_around_region = 0
tiny_profiler.verbose = 0
tiny_profiler.v = 0
amrex.use_profiler_syncs = 0
geometry.prob_lo = -0.00039999998989515007 -0.00039999998989515007 0
geometry.prob_hi = 0.00039999998989515007 0.00039999998989515007 0.00079999997979030013
amr.n_cell = 256 256 256
amr.max_grid_size = 256
amr.blocking_factor = 32
geometry.is_periodic = 0 0 0
geometry.coord_sys = 0
amr.v = 0
amr.n_proper = 1
amr.grid_eff = 0.69999998807907104
amr.refine_grid_layout = 1
amr.refine_grid_layout_x = 1
amr.refine_grid_layout_y = 1
amr.refine_grid_layout_z = 1
amr.check_input = 1
vismf.usesingleread = 1
vismf.usesinglewrite = 1
particles.particles_nfiles = 1024
particles.use_prepost = 0
particles.do_unlink = 1
particles.do_mem_efficient_sort = 1
lattice.reverse = 0
warpx.used_inputs_file = warpx_used_inputs
